name: Build
description: 'Build library'
inputs:
  root_dir:
    description: 'Root directory'
    required: true
  should_checkout:
    description: 'Checkout the core library?'
    required: true
    default: '1'
  dir:
    description: 'Library directory'
    required: true
    default: 'external_libs/wgui'
runs:
  using: "composite"
  steps:
    - name: Initialize Env
      id: init-env
      uses: Silverlan/common_actions/set_common_env_vars@main
      
    - uses: ChristopherHX/conditional@b4a9649204f81002ec9a4ef7d4bf7d6b2ab7fa55
      name: CMake Build
      with:
        if: ${{inputs.should_checkout == '1'}}
        step: |
          uses: Silverlan/common_actions/get_submodule@main
          with:
            repo: 'Silverlan/wgui'
            repo_name: 'wgui'
            cmake_var: 'DEPENDENCY_WGUI_INCLUDE'
            dir: 'external_libs'
            checkout_submodules: '0'
            
    - name: Define CMake Variables
      uses: Silverlan/common_actions/define_cmake_var@main
      with:
        cmake_var: '-DWGUI_INCLUDE_DEPENDENCIES=OFF'
            
    - name: Build submodule - freetype2
      uses: Silverlan/common_actions/build_submodule@main
      with:
        repo: 'https://github.com/aseprite/freetype2'
        repo_name: 'freetype'
        repo_branch: 'master'
        build_target: freetype
        cmake_var: 'DEPENDENCY_FREETYPE_INCLUDE'
        cmake_var_lib: 'DEPENDENCY_FREETYPE_LIBRARY'
            
    - name: Build submodule - materialsystem
      uses: Silverlan/materialsystem/github_actions/build@actions
      with:
        root_dir: "${{ env.GA_ROOT_DIR }}/external_libs/materialsystem"
        
    - name: Build submodule - util_formatted_text
      uses: Silverlan/util_formatted_text/github_actions/build@master
      with:
        root_dir: "${{ env.GA_ROOT_DIR }}/external_libs/util_formatted_text"
        
    - name: Check files
      id: check-files
      shell: bash
      run: |
        fname="/home/runner/work/wgui/wgui/build//external_libs/vfilesystem/RelWithDebInfo/libvfilesystem.so"
        echo "Check for existence of $fname..."
        if [ -f "$fname" ]; then
           echo "File exists!"
        else
           echo "File does not exist!"
        fi
        fname="/home/runner/work/wgui/wgui/build/external_libs/vfilesystem/RelWithDebInfo/libvfilesystem.so"
        echo "Check for existence of $fname..."
        if [ -f "$fname" ]; then
           echo "File exists!"
        else
           echo "File does not exist!"
        fi
        echo "Find..."
        find / -name "*ibvfilesystem.s*"
        echo "Done"
        
         
    - uses: Silverlan/common_actions/build_cmake@main
      name: CMake Build
      with:
        build_type: ${{ matrix.config.build_type }}
        build_generator: ${{ matrix.config.generators }}
        cmake_var: 'DEPENDENCY_WGUI_LIBRARY'
        build_target: wgui
        build_dir: '${{ matrix.config.build_dir }}/${{ inputs.dir }}'
        cmake_script_location: '${{ inputs.dir }}'
